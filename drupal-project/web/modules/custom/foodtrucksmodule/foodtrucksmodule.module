<?php

/**
 * Implements hook_user_login().
 */
//function foodtrucksmodule_user_login() {
//  $response = new \Symfony\Component\HttpFoundation\RedirectResponse("/");
//  $response->send();
//}

/**
 * Implements hook_form_alter().
 */
function foodtrucksmodule_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
//    hide and rename a few lables
  if ($form_id == 'node_food_trucks_form' || $form_id == 'node_food_trucks_edit_form') {
    if (isset($form['field_website_url']['widget'][0]['value']['#title']) && isset($form['field_website_url_scheme']['widget']['#title'])) {
      $form['field_website_url_scheme']['widget']['#title'] = $form['field_website_url']['widget'][0]['value']['#title'];
      unset($form['field_website_url']['widget'][0]['value']['#title']);
//      unset($form['field_website_url']['widget']['#title']);
    }
    if (isset($form['field_facebook_url']['widget'][0]['value']['#title']) && isset($form['field_facebook_url_scheme']['widget']['#title'])) {
      $form['field_facebook_url_scheme']['widget']['#title'] = $form['field_facebook_url']['widget'][0]['value']['#title'];
      unset($form['field_facebook_url']['widget'][0]['value']['#title']);
    }
//    hide entire foodtruck manager form, but don't remove, some values are still automatecally populated and seved
    if (isset($form['field_foodtruck_manager'])) {
      $form['field_foodtruck_manager']['#attributes']['class'][] = 'hidden';
    }

  }

//    hide and rename a few lables
  if ($form_id == 'node_food_truck_event_scheduled_form' || $form_id == 'node_food_truck_event_scheduled_edit_form') {
    if (isset($form['field_event_start_minute']['widget']['#title'])) { unset($form['field_event_start_minute']['widget']['#title']); }
    if (isset($form['field_event_end_minute']['widget']['#title'])) { unset($form['field_event_end_minute']['widget']['#title']); }
//    prepopulate and hide the title field
    if (!isset($form['title']['widget'][0]['value']['#default_value'])) {
      $form['title']['widget'][0]['value']['#default_value'] = date('Y-m-d');
      $form['title']['#attributes']['class'][] = 'hidden';
    }
//    popup message if options are empty
    if (is_array($form['field_food_truck']['widget']['#options']) && count($form['field_food_truck']['widget']['#options']) == 0) {
      $link = \Drupal\Core\Link::fromTextAndUrl("Add Food Truck", \Drupal\Core\Url::fromUserInput('/node/add/food_trucks'))
        ->toString();
      $rendered_message = \Drupal\Core\Render\Markup::create("$link is required");
      drupal_set_message($rendered_message, 'warning');
//      redirect to add foodtruck page
//      $response = new \Symfony\Component\HttpFoundation\RedirectResponse("/node/add/food_trucks");
//      $response->send();
    }
//    hide foodtruck field if number of options are less than 2
    if (is_array($form['field_food_truck']['widget']['#options']) && count($form['field_food_truck']['widget']['#options']) < 2) {
      $form['field_food_truck']['#attributes']['class'][] = 'hidden';
    }
  }
}

/**
 * Implements hook_entity_presave().
 */
function foodtrucksmodule_entity_presave(Drupal\Core\Entity\EntityInterface $entity) {
//  assign self to both manager fields
  if ($entity->bundle() == 'food_trucks') {
    assign_self_and_author($entity, 'field_foodtruck_manager');
    assign_self_and_author($entity, 'field_event_manager');
  }
}

function assign_self_and_author(&$entity, $field) {
  /** @var \Drupal\Node\Entity\Node $entity */
  $uid = $entity->getCurrentUserId()['0'];
  $author = $entity->getOwnerId();

  $uids = [];
  $values = $entity->get($field)->getValue();
  foreach ($values as $value) {$uids[] = $value['target_id'];}
  if (!in_array($uid, $uids)) {$uids[] = $uid;}
  if (!in_array($author, $uids)) {$uids[] = $author;}
  sort($uids);
  $entity->set($field, $uids);

}
